let express,readdirSync,cors,mongoose;_858‍.w("express",[["default",["express"],function(v){express=v}]]);_858‍.w("fs",[["readdirSync",["readdirSync"],function(v){readdirSync=v}]]);_858‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_858‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);

require("dotenv").config();



// we can't use import with morgan package D:
const morgan = require("morgan");

const app = express();

// database connection
mongoose
  .connect(process.env.DB, {
    useUnifiedTopology: true,
    useNewUrlParser: true,
    useCreateIndex: true,
  })
  .then(() => console.log("Connected to DB"))
  .catch((err) => _858‍.g.console.log(err));

// middleware
app.use(cors());
app.use(morgan("dev"));
app.use(express.json()); //when we will receive response the output object will be of undefined so we need to use express.json to convert it into json or we can also use body-parser

// routes middleware
readdirSync("./routes").map((file) => {
  app.use("/api", require(`./routes/${file}`));
});

app.listen(process.env.PORT || 8001, () =>
  console.log(`server is running on port ${process.env.PORT}`)
);
